services:
  # Elasticsearch for trace storage
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: jaeger-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - bootstrap.memory_lock=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - proxy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - SERVER_NAME=kibana.dev.local
    ports:
      - "5601:5601"
    labels:
      - traefik.enable=true
      - traefik.http.routers.kibana.rule=Host(`kibana.dev.local`)
      - traefik.http.routers.kibana.entrypoints=https
      - traefik.http.routers.kibana.tls=true
      - traefik.http.services.kibana.loadbalancer.server.port=5601
    networks:
      - proxy
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped

  # Jaeger Collector - receives traces from applications
  jaeger-collector:
    image: jaegertracing/jaeger-collector:1.52
    container_name: jaeger-collector
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
      - ES_NUM_SHARDS=1
      - ES_NUM_REPLICAS=0
      - COLLECTOR_OTLP_ENABLED=true
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_GRPC_TLS_ENABLED=false
      - COLLECTOR_HTTP_TLS_ENABLED=false
    ports:
      - "14268:14268"  # HTTP collector
      - "14250:14250"  # gRPC collector
      - "9411:9411"    # Zipkin compatible
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
    networks:
      - proxy
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Jaeger Query - serves the UI and API
  jaeger-query:
    image: jaegertracing/jaeger-query:1.52
    container_name: jaeger-query
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
      - ES_SERVER_URLS=http://elasticsearch:9200
      - QUERY_BASE_PATH=/
    labels:
      - traefik.enable=true
      - traefik.http.routers.jaeger.rule=Host(`jaeger.dev.local`)
      - traefik.http.routers.jaeger.entrypoints=https
      - traefik.http.routers.jaeger.tls=true
      - traefik.http.services.jaeger.loadbalancer.server.port=16686
    networks:
      - proxy
    depends_on:
      elasticsearch:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Jaeger Agent (optional) - can be used for legacy SDKs
  jaeger-agent:
    image: jaegertracing/jaeger-agent:1.52
    container_name: jaeger-agent
    environment:
      - REPORTER_GRPC_HOST_PORT=jaeger-collector:14250
    ports:
      - "6831:6831/udp"  # Thrift compact
      - "6832:6832/udp"  # Thrift binary
      - "5778:5778"      # HTTP config
      - "14271:14271"    # HTTP health check
    networks:
      - proxy
    depends_on:
      - jaeger-collector
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

  # OTEL Collector (optional) - for advanced OTLP processing
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    labels:
      - traefik.enable=true
      - traefik.http.routers.otel-collector-http.rule=Host(`otel.dev.local`)
      - traefik.http.routers.otel-collector-http.entrypoints=https
      - traefik.http.routers.otel-collector-http.tls=true
      - traefik.http.services.otel-collector-http.loadbalancer.server.port=4318
      - traefik.tcp.routers.otel-collector-grpc.rule=HostSNI(`otel-grpc.dev.local`)
      - traefik.tcp.routers.otel-collector-grpc.entrypoints=grpc
      - traefik.tcp.routers.otel-collector-grpc.tls=true
      - traefik.tcp.services.otel-collector-grpc.loadbalancer.server.port=4317
    ports:
      - "4315:4317"    # OTLP gRPC (alternative direct port)
      - "4316:4318"    # OTLP HTTP (alternative direct port)
      - "8889:8889"    # Prometheus metrics
    networks:
      - proxy
    depends_on:
      - jaeger-collector
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

volumes:
  elasticsearch_data:
    driver: local

networks:
  proxy:
    external: true